// Generated by view binder compiler. Do not edit!
package com.example.titans_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.titans_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEventItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView eventDateTime;

  @NonNull
  public final TextView eventDetails;

  @NonNull
  public final TextView eventTitle;

  @NonNull
  public final ImageView menuIcon;

  private FragmentEventItemBinding(@NonNull LinearLayout rootView, @NonNull TextView eventDateTime,
      @NonNull TextView eventDetails, @NonNull TextView eventTitle, @NonNull ImageView menuIcon) {
    this.rootView = rootView;
    this.eventDateTime = eventDateTime;
    this.eventDetails = eventDetails;
    this.eventTitle = eventTitle;
    this.menuIcon = menuIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEventItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEventItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_event_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEventItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.eventDateTime;
      TextView eventDateTime = ViewBindings.findChildViewById(rootView, id);
      if (eventDateTime == null) {
        break missingId;
      }

      id = R.id.eventDetails;
      TextView eventDetails = ViewBindings.findChildViewById(rootView, id);
      if (eventDetails == null) {
        break missingId;
      }

      id = R.id.eventTitle;
      TextView eventTitle = ViewBindings.findChildViewById(rootView, id);
      if (eventTitle == null) {
        break missingId;
      }

      id = R.id.menuIcon;
      ImageView menuIcon = ViewBindings.findChildViewById(rootView, id);
      if (menuIcon == null) {
        break missingId;
      }

      return new FragmentEventItemBinding((LinearLayout) rootView, eventDateTime, eventDetails,
          eventTitle, menuIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
